name: PUSH Workflow

on:
  push:
    branches:
      - master
      - snapshot

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: pur12345678
          MYSQL_DATABASE: crm_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.3
          extensions: mbstring, bcmath
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -n --prefer-dist
      - name: Install NPM Dependencies
        run: npm install
      - name: Generate Key
        run: php artisan key:generate
      - name: Create database
        run:  mysql -u root -p pur12345678 -e 'create database crm_test;'
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_HOST: 127.0.0.1
          DB_CONNECTION: mysql
          DB_DATABASE: crm_test
          DB_USER: root
          DB_PASSWORD: pur12345678
        run: |
          php artisan migrate
          vendor/bin/phpunit
      #- name: Execute tests (Unit and Feature tests) via JEST
        #run: node_modules/.bin/jest
  build-js-production:
    name: Build JavaScript/CSS for PRODUCTION Server
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  # build-js-staging:
  #   name: Build JavaScript/CSS for STAGING Server
  #   runs-on: ubuntu-latest
  #   needs: app-tests
  #   if: github.ref == 'refs/heads/staging'
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: NPM Build
  #       run: |
  #         npm install
  #         npm run dev
  #     - name: Put built assets in Artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: assets
  #         path: public
  deploy-production:
    name: Deploy Project to PRODUCTION Server
    runs-on: ubuntu-latest
    needs: [build-js-production, app-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.3
          extensions: mbstring, bcmath
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to PRODUCTION Server
        env:
          DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
        run: dep deploy production --tag=${{ env.GITHUB_REF }} -vvv
  # deploy-staging:
  #   name: Deploy Project to STAGING Server
  #   runs-on: ubuntu-latest
  #   needs: [build-js-staging, app-tests]
  #   if: github.ref == 'refs/heads/staging'
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Fetch built assets from Artifacts
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: assets
  #         path: public
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@master
  #       with:
  #         php-version: 7.4
  #         extension-csv: mbstring, bcmath
  #     - name: Composer install
  #       run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
  #     - name: Setup Deployer
  #       uses: atymic/deployer-php-action@master
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
  #     - name: Deploy to Prod
  #       env:
  #         DOT_ENV: ${{ secrets.DOT_ENV_STAGING }}
  #       run: dep deploy staging --tag=${{ env.GITHUB_REF }} -vvv
